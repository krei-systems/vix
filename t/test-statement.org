#+title: Test Statement

* CLI APP

This section will manually test every commands if it's working or not, I'll start from top to bottom until I reached the last command. I created a directory named =foo-test/= and performed there all the commands needed with regards to nix. The section names that has =section-name != after *section-name*, that means I encountered warnings, error and the like.

#+begin_src bash
$ vix --help
NAME:
  vix - vix

USAGE:
  vix [global-options] [<command>] [command-options] [arguments ...]

  Vix is a program for interacting with the Nix ecosystem

OPTIONS:
      --help     display usage information and exit
      --version  display version and exit
  -v, --verbose  Verbosity [default: 0]

COMMANDS:
  install, i                         install a package into a profile
  remove, uninstall, u               uninstall packages from a profile
  upgrade, up                        upgrade packages using their most recent flake
  list, ls                           list the installed packages
  rollback, back                     roll back to a previous version of a profile
  history, hist                      show all versions of a profile
  wipe-history, wipe                 delete non-current versions of a profile
  diff-closures, diff                show the closure difference between each version of a profile
  init, fi                           create a flake in the current directory
  metadata, fm                       show flake metadata
  show, fs                           show the outputs provided by a flake
  update, fu                         update flake lock file
  new, fn                            create a flake in the specified directory from a template
  clone, fc                          clone flake repository
  check, fh                          check whether the flake evaluates and run its tests
  archive, fa                        copy a flake and all its inputs to a store
  prefetch, fp                       download the flake source tree into the Nix store
  rebuild, rb                        rebuild the system
  search, s                          search for packages
  develop, dev                       run a dev shell of a derivation build environment
  make, mk                           run make inside a dev shell
  build                              build a derivation or fetch a store path
  run                                run a Nix application
  bundle                             bundle an application so that it works outside of the Nix store
  copy                               start an interactive environment for evaluating Nix expressions
  edit                               open the Nix expression of a Nix package in $EDITOR
  eval                               evaluate a Nix expression
  fmt, format                        reformat your code in the standard style
  repl                               start an interactive environment for evaluating Nix expressions
  path-info, path                    query information about store paths
  why-depends, why                   show why a package has another package in its closure
  env-shell, shell                   run a shell in which the specified packages are available
  print-dev-env, print               print shell code of derivation
  daemon                             daemon to perform store operations on behalf of non-root clients
  realisation-info                   manipulate a Nix realisation
  upgrade-nix                        upgrade Nix to the latest stable version
  registry-add, ra                   create a flake in the current directory
  registry-pin, rp                   pin a flake to its current version
  registry-remove, rr                remove flake from user flake registry
  registry-list, rl                  list available Nix flakes
  config-show                        show the Nix configuration or the value of a specific setting
  config-check                       check your system for potential problems and print a PASS or FAIL for
                                     each check
  derivation-add                     add a store derivation
  derivation-show                    show the contents of a store derivation
  hash-file                          print hash of a regular file
  hash-path                          print hash of the NAR serialisation of a path
  hash-convert                       convert between hash formats
  key-convert                        generate a public key for verifying store paths
  key-generate                       generate a secret key for signing store paths
  nar-cat                            print the contents of a file inside a NAR file on stdout
  nar-dump-path, nar-dump, nar-pack  serialise a path to stdout in NAR format
  nar-ls                             show information about a path inside a NAR file
  store-add                          add a file or directory to the Nix store
  store-cat                          print the contents of a file in the Nix store on stdout
  store-copy-log                     copy build logs between Nix stores
  store-copy-sigs                    copy store path signatures from substituters
  store-delete                       delete paths from the Nix store
  store-diff-closures                show what packages and versions were added and removed between two
                                     closures
  store-dump-path                    serialise a store path to stdout in NAR format
  store-gc                           perform garbage collection on a Nix store
  store-info, store-ping             test whether a store can be accessed
  store-ls                           show information about a path in the Nix store
  store-make-content-addressed       rewrite a path or closure to content-addressed form
  store-optimise                     replace identical files in the store by hard links
  store-path-from-hash-part          get a store path from its hash part
  store-prefetch-file                download a file into the Nix store
  store-repair                       repair store paths
  store-sign                         sign store paths with a local key
  store-verify                       verify the integrity of store paths

#+end_src
* Top-level
** Default
*** Checks
| Command | Test |
|---------+------|
| vix     | ✔️   |
** Help
| Command    | Test |
|------------+------|
| vix --help | ✔️   |
** Version
| Command       | Test |
|---------------+------|
| vix --version | ✔️   |

* Profile
** Install (i)
+ Install a package into a profile
*** Checks
| Main Commands               | Test |
|-----------------------------+------|
| vix install --help          | ✔️   |
| vix install -n hello        | ✔️   |
| vix install nixpkgs#hello ️ | ✔️   |

| Alias                        | Test |
|------------------------------+------|
| vix i --help                 | ✔️   |
| vix i -n hello               | ✔️   |
| vix i nixpkgs#hello ️        | ✔️   |

** Uninstall (u)
+ Uninstall packages from a profile
| Main Commands                 | Test |
|-------------------------------+------|
| vix uninstall --help          | ✔️   |
| vix uninstall hello           | ✔️   |

| Alias                 | Test |
|-----------------------+------|
| vix u --help          | ✔️   |
| vix u hello           | ✔️   |

** Upgrade (up)
+ Upgrade packages using their most recent flake
| Main Commands      | Test |
|--------------------+------|
| vix upgrade --help | ✔️   |
| vix upgrade vim    | ✔️   |

| Alias         | Test |
|---------------+------|
| vix up --help | ✔️   |
| vix up vim    | ✔️   |

** List (ls)
+ List the installed packages
| Main Commands   | Test |
|-----------------+------|
| vix list --help | ✔️   |
| vix list        | ✔️   |

| Alias         | Test |
|---------------+------|
| vix ls --help | ✔️   |
| vix ls        | ✔️   |

** Rollback (back)
+ Roll back to a previous version of a profile
| Main Commands       | Test |
|---------------------+------|
| vix rollback --help | ✔️   |
| vix rollback        | ✔️   |

| Alias           | Test |
|-----------------+------|
| vix back --help | ✔️   |
| vix back -t     | ✔️   |

** History (hist)
- Show all versions of a profile
| Main Commands       | Test |
|---------------------+------|
| vix history --help  | ✔️   |
| vix history         | ✔️   |

| Alias           | Test |
|-----------------+------|
| vix hist --help | ✔️   |
| vix hist        | ✔️   |
** Wipe-history (wipe)
+ Delete non-current versions of a profile
| Main Commands                                               | Test |
|-------------------------------------------------------------+------|
| vix wipe-history --help                                     | ✔️   |
| vix wipe-history -- --profile /tmp/profile --older-than 30d | ✔️   |

| Alias                                               | Test |
|-----------------------------------------------------+------|
| vix wipe --help                                     | ✔️   |
| vix wipe -- --profile /tmp/profile --older-than 30d | ✔️   |

** Diff-closures (diff)
+ Show the closure difference between each version of a profile
| Main Commands                                               | Test |
|-------------------------------------------------------------+------|
| vix diff-closures --help                                    | ✔️   |
| vix diff-closures -- --profile /nix/var/nix/profiles/system | ✔️   |

| Alias                                              | Test |
|----------------------------------------------------+------|
| vix hist --help                                    | ✔️   |
| vix diff -- --profile /nix/var/nix/profiles/system | ✔️   |

* Flake !
** Init (fi)
+ Create a flake in the current directory
| Main Commands   | Test |
|-----------------+------|
| vix init --help | ✔️   |
| vix init        | ✔️   |

| Alias         | Test |
|---------------+------|
| vix fi --help | ✔️   |
| vix fi        | ✔️   |

** Metadata (fm)
+ how flake metadata
| Main Commands                                               | Test |
|-------------------------------------------------------------+------|
| vix metadata --help                                         | ✔️   |
| vix metadata                                                | ✔️   |

| Alias                                              | Test |
|----------------------------------------------------+------|
| vix fm --help                                      | ✔️   |
| vix fm                                             | ✔️   |

** Show (fs)
+ show the outputs provided by a flake
| Main Commands      | Test |
|--------------------+------|
| vix show --help    | ✔️   |
| vix show           | ✔️   |
| vix show templates | ✔️   |

| Alias            | Test |
|------------------+------|
| vix fs --help    | ✔️   |
| vix fs templates | ✔️   |

** Update (fu)
+ update flake lock file
| Main Commands                                               | Test |
|-------------------------------------------------------------+------|
| vix update --help                                           | ✔️   |
| vix update                                                  | ✔️   |

| Alias                                              | Test |
|----------------------------------------------------+------|
| vix fu --help                                      | ✔️   |
| vix fu                                             | ✔️   |

** New (fn)
Typo in help command: it should have -- before -t
#+begin_Src shell
$ vix fn --help
...

Create a flake in the directory `hello':

    vix new hello

Create a flake in the directory `hello' using template haskell-hello:

    vix new hello -t templates#haskell-hello)
#+end_Src
+ create a flake in the specified directory from a template
| Main Commands                               | Test |
|---------------------------------------------+------|
| vix new --help                              | ✔️   |
| vix new hello                               | ✔️   |
| vix new hello -- -t templates#haskell-hello | ✔️   |

| Alias                                      | Test |
|--------------------------------------------+------|
| vix fn --help                              | ✔️   |
| vix fn hello                               | ✔️   |
| vix fn hello -- -t templates#haskell-hello | ✔️   |

** Clone (fc)
+ clone flake repository
| Main Commands                                               | Test |
|-------------------------------------------------------------+------|
| vix clone --help                                            | ✔️   |
| vix clone dwarffs -- --dest dwarfss                         | ✔️   |

| Alias                            | Test |
|----------------------------------+------|
| vix fc --help                    | ✔️   |
| vix fc dwarffs -- --dest dwarfss | ✔️   |

** Check (fh)
+ check whether the flake evaluates and run its tests
| Main Commands    | Test |
|------------------+------|
| vix check --help | ✔️   |
| vix check        | ✔️   |

| Alias         | Test |
|---------------+------|
| vix fh --help | ✔️   |
| vix fh        | ✔️   |

** Archive (fa) (typo in --help - achive)
+ copy a flake and all its inputs to a store
| Main Commands      | Test |
|--------------------+------|
| vix archive --help | ✔️   |
| vix arhive dwarffs | ✔️   |

| Alias          | Test |
|----------------+------|
| vix fa --help  | ✔️   |
| vix fa dwarffs | ✔️   |

** Prefetch (fp)
+ download the flake source tree into the Nix store
| Main Commands        | Test |
|----------------------+------|
| vix prefetch --help  | ✔️   |
| vix prefetch dwarffs | ✔️   |

| Alias          | Test |
|----------------+------|
| vix fp --help  | ✔️   |
| vix fp dwarffs | ✔️   |

* System
** Rebuild (rb)
- rebuild the system
| Main Commands                  | Test |
|--------------------------------+------|
| vix rebuild --help             | ✔️   |
| vix rebuild -s -f ~/src/system | ✔️   |
| vix rebuild -s                 | ✔️   |

| Alias                     | Test |
|---------------------------+------|
| vix rb --help             | ✔️   |
| vix rb -s -f ~/src/system | ✔️   |
| vix rb -s                 | ✔️   |

** Search (s)
- search for packages
| Main Commands                  | Test |
|--------------------------------+------|
| vix search --help              | ✔️   |
| vix search -n firefox          | ✔️   |
| vix search nixpkgs#gnome3 vala | ✔️   |

| Alias                     | Test |
|---------------------------+------|
| vix --help                | ✔️   |
| vix s -n firefox          | ✔️   |
| vix s nixpkgs#gnome3 vala | ✔️   |

* MISC
** Build
+ build a derivation or fetch a store path
| Main Commands             | Test |
|---------------------------+------|
| vix build --help          | ✔️   |
| vix build -n hello cosway | ✔️   |
| vix build                 | ✔️   |
** Run
+ run a Nix application
| Main Commands                  | Test |
|--------------------------------+------|
| vix run --help                 | ✔️   |
| vix run -n vim                 | ✔️   |
** Bundle
+ bundle an application so that it works outside of the Nix store
| Main Commands     | Test |
|-------------------+------|
| vix bundle --help | ✔️   |
| vix bundle -n vim | ✔️   |
** Copy
+ start an interactive environment for evaluating Nix expressions
| Main Commands                              | Test |
|--------------------------------------------+------|
| vix bundle --help                          | ✔️   |
| vix copy -- --all --from file:///tmp/cache | ✔️   |
** Edit
+ open the Nix expression of a Nix package in $EDITOR
| Main Commands     | Test |
|-------------------+------|
| vix edit --help   | ✔️   |
| vix edit -n hello | ✔️   |
** Eval
+ evaluate a Nix expression
| Main Commands              | Test |
|----------------------------+------|
| vix eval --help            | ✔️   |
| vix eval -- --expr '1 + 2' | ✔️   |
** Fmt, format
+ reformat your code in the standard style
| Main Commands                  | Test |
|--------------------------------+------|
| vix format --help              | ✔️   |
| vix format                     | ✔️   |

| Alias                          | Test |
|--------------------------------+------|
| vix fmt --help                 | ✔️   |
| vix fmt                        | ✔️   |

** Repl
+ start an interactive environment for evaluating Nix expressions
| Main Commands                  | Test |
|--------------------------------+------|
| vix repl --help                | ✔️   |
| vix repl                       | ✔️   |

** Path-info (path)
+ query information about store paths
| Main Commands          | Test |
|------------------------+------|
| vix path-info --help   | ✔️   |
| vix path-info -n hello | ✔️   |

| Alias                     | Test |
|---------------------------+------|
| vix path --help           | ✔️   |
| vix path -n hello         | ✔️   |
** Why-depends (why)
+ show why a package has another package in its closure
| Main Commands                  | Test |
|--------------------------------+------|
| vix why-depends --help         | ✔️   |
| vix why-depends -n hello glibc | ✔️   |

| Alias                  | Test |
|------------------------+------|
| vix why --help         | ✔️   |
| vix why -n hello glibc | ✔️   |
** Env-shell (shell)
+ run a shell in which the specified packages are available.
| Main Commands                | Test |
|------------------------------+------|
| vix env-shell --help         | ✔️   |
| vix env-shell -n yt-dlp      | ✔️   |

| Alias                    | Test |
|--------------------------+------|
| vix shell --help         | ✔️   |
| vix shell -n yt-dlp      | ✔️   |
** Print-dev-env (print)
+ print shell code of derivation
| Main Commands                | Test |
|------------------------------+------|
| vix print-dev-env --help     | ✔️   |
| vix print-dev-end -n hello   | ✔️   |

| Alias                    | Test |
|--------------------------+------|
| vix print --help         | ✔️   |
| vix print -n hello       | ✔️   |
** Daemon
+ daemon to perform store operations on behalf of non-root clients
| Main Commands                 | Test |
|-------------------------------+------|
| vix daemon --help             | ✔️   |
| vix daemon -- --force-trusted | ✔️   |
** Realisation-info
+ manipulate a Nix realisation
| Main Commands                 | Test |
|-------------------------------+------|
| vix realisation-info --help   | ✔️   |
| vix realisation-info -n hello | ✔️   |

** Upgrade-nix
+ upgrade Nix to the latest stable version
| Main Commands                 | Test |
|-------------------------------+------|
| vix upgrade-nix --help        | ✔️   |
| vix upgrade-nix               | ✔️   |
* Registry
** Registry-add (ra)
create a flake in the current directory
| Main Commands                                             | Test |
|-----------------------------------------------------------+------|
| vix registry-add --help                                   | ✔️   |
| vix registry-add nixpkgs github:NixOS/nixpkgs/nixos-20.03 | ✔️ ️ |

| Alias                                                     | Test |
|-----------------------------------------------------------+------|
| vix ra --help                                             | ✔️   |
| vix ra -add nixpkgs github:NixOS/nixpkgs/nixos-20.03      | ✔️   |

** Registry-pin (rp)
pin a flake to its current version
| Main Commands            | Test |
|--------------------------+------|
| vix registry-pin --help  | ✔️   |
| vix registry-pin nixpkgs | ✔️   |

| Alias          | Test |
|----------------+------|
| vix rp --help  | ✔️   |
| vix rp nixpkgs | ✔️   |

** Registry-remove (rr)
remove flake from user flake registry
| Main Commands               | Test |
|-----------------------------+------|
| vix registry-remove --help  | ✔️   |
| vix registry-remove nixpkgs | ✔️   |

| Alias                    | Test |
|--------------------------+------|
| vix rr --help            | ✔️   |
| vix rr -n hello          | ✔️   |

** Registry-list (rl)
list available Nix flakes
| Main Commands            | Test |
|--------------------------+------|
| vix registry-list --help | ✔️   |
| vix registry-list        | ✔️   |

| Alias         | Test |
|---------------+------|
| vix rl --help | ✔️   |
| vix rl        | ✔️   |
* Config
** Config-show
+ show the Nix configuration or the value of a specific setting
| Main Commands            | Test |
|--------------------------+------|
| vix config-show --help   | ✔️   |
| vix config-show          | ✔️   |
** Config-check
+ check your system for potential problems
| Main Commands            | Test |
|--------------------------+------|
| vix config-check --help  | ✔️   |
| vix config-check         | ✔️   |
** Derivation-add
+ add a store derivation
| Main Commands             | Test |
|---------------------------+------|
| vix derivation-add --help | ✔️   |
| vix derivation-add        | ✔️   |

** Derivation-show
+ show the contents of a store derivation
| Main Commands              | Test |
|----------------------------+------|
| vix derivation-show --help | ✔️   |
| vix derivation-show        | ✔️   |

* Hash
** Hash-file
+ print hash of a regular file
| Main Commands              | Test |
|----------------------------+------|
| vix hash-file --help       | ✔️   |
| vix hash-file flake.nix    | ✔️   |
** Hash-path
+ print hash of the NAR serialisation of a path
| Main Commands           | Test |
|-------------------------+------|
| vix hash-path --help    | ✔️   |
| vix hash-path foo-tests | ✔️   |
** Hash-convert
+ convert between hash formats
| Main Commands                                                                 | Test |
|-------------------------------------------------------------------------------+------|
| vix hash-convert --help                                                       | ✔️   |
| vix hash-convert -- --hash-algo sha1 800d59cfcd3c05e900cb4e214be48f6b886a08df | ✔️   |

* Key !
** Key-convert
+ generate a public key for verifying store paths
| Main Commands          | Test                          |
|------------------------+-------------------------------|
| vix key-convert --help | ✔️                            |
| vix key-convert        | Not yet tested in real KEY.() |
** Key-generate
+ generate a secret key for signing store paths
| Main Commands                                                     | Test                               |
|-------------------------------------------------------------------+------------------------------------|
| vix hash-file --help                                              | ✔️                                 |
| vix key-generate -- --key-name cache.example.org-1 > ./secret-key | Not yet tested in real application |
* NAR !
** Nar-cat
+ print the contents of a file inside a NAR file on stdout
| Main Commands                                      | Test |
|----------------------------------------------------+------|
| vix nar-cat --help                                 | ✔️   |
| vix nar-cat ./hello.nar /share/man/man1/hello.1.gz | ✔️   |

** Nar-dump-path (nar-dump or nar-pack)
+ serialise a path to stdout in NAR format
| Main Commands                     | Test                                                                      |
|-----------------------------------+---------------------------------------------------------------------------|
| vix nar-dump-path --help          | ✔️                                                                        |
| vix Nar-dump-path ./foo > foo.nar | ✔️  warning: 'nix nar dump-path' is a deprecated alias for 'nix nar pack' |
** Nar-ls
+ show information about a path inside a NAR file
| Main Commands                     | Test                                                                      |
|-----------------------------------+---------------------------------------------------------------------------|
| vix nar-dump-path --help          | ✔️                                                                        |
| vix Nar-dump-path ./foo > foo.nar | ✔️  warning: 'nix nar dump-path' is a deprecated alias for 'nix nar pack' |

* Store !
** Store-add
+ add a file or directory to the Nix store
| Main Commands            | Test |
|--------------------------+------|
| vix store-add --help     | ✔️   |
| vix store-add ./foo-test | ✔️   |

** Store-cat (typo error vix store-cat -- --store)!
+ print the contents of a file in the Nix store on stdout
| Main Commands                                                                                                   | Test |
|-----------------------------------------------------------------------------------------------------------------+------|
| vix store-cat --help                                                                                            | ✔️   |
| vix store-cat --store https://cache.nixos.org/ /nix/store/0i2jd68mp5g6h2sa5k9c85rb80sn8hi9-hello-2.10/bin/hello | ✔️   |

** Store-copy-log (typo in help 'vix copy-log --from https://cache.nixos.org --eval-store auto nixpkgs#hello' it should be vix store-copy-log)
+ copy build logs between Nix stores
  | Main Commands                                                                        | Test |
  |--------------------------------------------------------------------------------------+------|
  | vix store-copy-log --help                                                            | ✔️   |
  | vix store-copy-log -- --from https://cache.nixos.org --eval-store auto nixpkgs#hello | ✔️   |

** Store-copy-sigs
+ copy store path signatures from substituters
  | Main Commands              | Test |
  |----------------------------+------|
  | vix store-copy-sigs --help | ✔️   |
  | vix store-copy-sigs        | ✔️   |

** Store-delete
+ delete paths from the Nix store
| Main Commands                                                          | Test |
|------------------------------------------------------------------------+------|
| vix store-delete --help                                                | ✔️   |
| vix store-delete  /nix/store/b50ly9zjm3s2sl9dn0vmf4l3mz54zbg4-foo-test | ✔️   |

** Store-diff-closures
+ show what packages and versions were added and removed
| Main Commands                                                                                     | Test |
|---------------------------------------------------------------------------------------------------+------|
| vix store-diff-closures --help                                                                    | ✔️   |
| vix store-diff-closures   vix store-delete /nix/store/yb5q57zxv6hgqql42d5r8b5k5mcq6kay-hello-2.10 | ✔️   |
** Store-dump-path
+ serialise a store path to stdout in NAR format
| Main Commands                                                                                                              | Test |
|----------------------------------------------------------------------------------------------------------------------------+------|
| vix store-dump-path --help                                                                                                 | ✔️   |
| vix store-dump-path -- --store https://cache.nixos.org/ /nix/store/7crrmih8c52r8fbnqb933dxrsp44md93-glibc-2.25 > glibc.nar | ✔️   |
** Store-gc
+ perform garbage collection on a Nix store
| Main Commands       | Test |
|---------------------+------|
| vix store-gc --help | ✔️   |
| vix store-gc        | ✔️   |
** Store-info (store-ping)
+ test whether a store can be accessed
| Main Commands                          | Test |
|----------------------------------------+------|
| vix store-info --help                  | ✔️   |
| vix store-info -- --store ssh://eldriv | ✔️   |
** Store-ls
+ show information about a path in the Nix store
| Main Commands                                                                                                              | Test |
|----------------------------------------------------------------------------------------------------------------------------+------|
| vix store-ls --help                                                                                                        | ✔️   |
| vix store-ls -- --store https://cache.nixos.org/ --long --recursive /nix/store/0i2jd68mp5g6h2sa5k9c85rb80sn8hi9-hello-2.10 | ✔️   |
** Store-make-content-addressed
+ rewrite a path or closure to content-addressed form
| Main Commands                             | Test |
|-------------------------------------------+------|
| vix store-make-content-addressed --help   | ✔️   |
| vix store-make-content-addressed -n hello | ✔️   |
** Store-optimise
+ replace identical files in the store by hard links
| Main Commands                             | Test |
|-------------------------------------------+------|
| vix store-optimise --help                 | ✔️   |
| vix store-optimise                        | ✔️   |
** Store-path-from-hash-part
+ get a store path from its hash part
| Main Commands                                                                                   | Test |
|-------------------------------------------------------------------------------------------------+------|
| vix store-path-from-hash-part --help                                                            | ✔️   |
| vix store-path-from-hash-part --store https://cache.nixos.org/ 0i2jd68mp5g6h2sa5k9c85rb80sn8hi9 | ✔️   |
** Store-prefetch-file
+ download a file into the Nix store
| Main Commands                                                                       | Test |
|-------------------------------------------------------------------------------------+------|
| vix store-prefetch-file --help                                                      | ✔️   |
| vix store-prefetch-file https://releases.nixos.org/nix/nix-2.3.10/nix-2.3.10.tar.xz | ✔️   |
** Store-repair
+ repair store paths
| Main Commands                                                           | Test |
|-------------------------------------------------------------------------+------|
| vix store-repair --help                                                 | ✔️   |
| vix store-repair /nix/store/yb5q57zxv6hgqql42d5r8b5k5mcq6kay-hello-2.10 | ✔️   |
** Store-sign
+ sign store paths with a local key
| Main Commands         | Test |
|-----------------------+------|
| vix store-sign --help | ✔️   |
| vix store-sign        | ✔️   |
** Store-verify
+ verify the integrity of store paths
| Main Commands             | Test |
|---------------------------+------|
| vix store-verify --help   | ✔️   |
| vix store-verify -- --all | ✔️   |
